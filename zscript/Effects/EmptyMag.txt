Class EmptyMagBase : Actor
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
		//This should be queueing it into Nashgores debris system i think?
	}
	
	Default
	{
	   Height 2;
	   Radius 2;
	   Speed 8;
	   Scale 1.0;
	   +DOOMBOUNCE;
	   -NOGRAVITY;
	   +WINDTHRUST;
	   +CLIENTSIDEONLY; //[Pop] Does this even matter? investigate later
	   +MOVEWITHSECTOR;
	   +MISSILE;
	   +NOBLOCKMAP;
	   -DROPOFF;
	   +NOTELEPORT;
	   +FORCEXYBILLBOARD; //[Pop] hmm, maybe, maybe not, we will see
	   +GHOST;
	   
	   +ROLLSPRITE
	   +ROLLCENTER;
	   BounceCount 4;
	   
	   Mass 15; //[Pop] setting higher than 10, cause somethin with terrain splashes?
	   
	   SeeSound "weapons/emptymag/dropM"; //[Pop] also weapons/emptymag/dropL and weapons/emptymag/dropS respectively
	}
	States
	{
		Spawn:
			ECLI A 1;
			Goto Spawn1;
		Spawn1:
			#### A 2 A_SetRoll(roll+36, SPF_INTERPOLATE); //[Pop] Use 24 for bigger mags/drums
			Loop;
		Death:
			#### A 0 A_Jump(256, "Rest1", "Rest2");
		Rest1:
			#### G 900 A_SetRoll(0);
			#### A -1;
			stop;  		
		Rest2:
			#### A 0 {bSpriteFlip = true;}
			#### G 900 A_SetRoll(0);
			#### A -1;
			stop;
		Splash:
			#### # -1;
			Stop;
	}
}	

Class SGL_Drum : EmptyBrass2 //See?  Very minimal code to do the same thing.
{
  Default
   {
		Scale 0.33;
		BounceCount 3;
		SeeSound "weapons/largemagdrop";
	}
 States
   {
		Spawn:
			SGD1 A 0;
		SpawnJump:
			"####" A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3");
		Spawn1:
			"####" ABCDEFGHABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ  1 {
				A_SetRoll(roll+16);
			}
			Goto Death;
		Spawn2:
			"####" BCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJA  1 {
				A_SetRoll(roll+32);
			}
			Goto Death;
		Spawn3:
			"####" CDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJAB  1 {
				A_SetRoll(roll+72);
			}
			Goto Death;
	}
}

Class EmptyRLMagazine : EmptyBrass2
{
  Default
   {
		Scale 0.28;
		BounceCount 3;
		SeeSound "weapons/largemagdrop";
	}
 States
   {
		Spawn:
			RCS3 A 0;
		SpawnJump:
			"####" A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3");
			Goto Spawn1;
			
		Death:
			#### A 0 a_setroll(0);
			#### A 0 A_Jump(256, "Case1", "Case2", "Case3", "Case4");
		Case1:
			#### K 0;
			Goto Rest;
		Case2: //Flipped Case 1
			#### K 0 {bSPRITEFLIP = True;}
			goto Rest;
		Case3: 
			#### L 0;
			Goto Rest;
		Case4: //Flipped Case 3
			#### L 0 {bSPRITEFLIP = True;}
			goto Rest;
	}
}

Class FlamerEmptyPB_Fuel : EmptyBrass2 //See?  Very minimal code to do the same thing.
//Yea I see
{
  Default
   {
		Scale 0.38;
		BounceFactor 0.4;
		BounceCount 2;
		SeeSound "weapons/flamethrower/misc1";
	}
 States
   {
		Spawn:
			FMLA A 0;
		SpawnJump:
			"####" A 0 A_Jump(16, "SpawnSmoking");
			"####" A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3");
		Spawn1:
			"####" ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ  1 {
				A_SetRoll(roll+16);
			}
			Goto Death;
		Spawn2:
			"####" BCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHABCDEFGHIJA  1 {
				A_SetRoll(roll+32);
			}
			Goto Death;
		Spawn3:
			"####" CDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJAB  1 {
				A_SetRoll(roll+72);
			}
			Goto Death;
		SpawnSmoking:
			"####" A 0 { smoking = 1;}
			"####" ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 1 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+75);
			}
		Goto Death;
		
		Death:
			  FMLA K 0 A_SetRoll(0);
		Rest:
				FMLA K 0 A_JumpIf(smoking == 1, "Rest2");
				FMLA K 0;
				"####" "###########################################" 1;
				"####" "#" -1;
				Stop;
		Rest2:
				"####" "###########################################" 1 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				"####" "#" -1;
		Stop;		
	}
}


Class SGL_StickyDrum : SGL_Drum
{
 States
   {
		Spawn:
			SGD2 A 0;
			Goto SpawnJump;
	}
}

Class SGL_IncendiaryDrum : SGL_Drum
{
 States
   {
		Spawn:
			SGD3 A 0;
			Goto SpawnJump;
	}
}

Class SGL_CryoDrum : SGL_Drum
{
 States
   {
		Spawn:
			SGD4 A 0;
			Goto SpawnJump;
	}
}

Class SGL_AcidDrum : SGL_Drum
{
 States
   {
		Spawn:
			SGD5 A 0;
			Goto SpawnJump;
	}
}

Class RevolverSpeedLoader : EmptyBrass2
{
	Default
	{  	
   -DONTSPLASH;
   -CANBOUNCEWATER;
   +FLOORCLIP;
   +THRUACTORS;
		Scale 0.20;
		BounceFactor 0.85;
		BounceCount 4;
		SeeSound "weapons/smallmagdrop";
	}
	States
	{
		Spawn:
			RVS1 A 0;
			Goto SpawnJump;
		SpawnSmoking:
			"####" ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 1 {
				A_SetRoll(roll+75);
			}
			Goto Death;
		Death:
			  "####" A 0 A_SetRoll(0);
			  "####" A 0 A_Jump(256,"Case1","Case2");
		Case1:
			"####" C 0;
			Goto Rest;
		Case2:
			"####" G 0;
			Goto Rest;
		}
}

Class EmptyClipMP40 : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.125;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/smallmagdrop";
   }
   States
   {
   Spawn:
      CLP4 A 1;
	  
	  Exist:
      CLP4 ABCDEFGH 4;
      Goto Spawn+1;
   Death:
      CLP4 G 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      loop;
	  
   	Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyClip : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {Height 12;
   Radius 9;
   Speed 4;
   Scale 1.01;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      ECLI A 1;
	  
	  Exist:
      ECLI ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      ECLI G 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      loop;
	  
  Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyPistolMag : EmptyMagMP40
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	
	Default
	{
		Height 12;
		Radius 9;
		Speed 4;
		Scale 0.24;
		+DOOMBOUNCE;
		-NOGRAVITY;
		+WINDTHRUST;
		+CLIENTSIDEONLY;
		+MOVEWITHSECTOR;
		+MISSILE;
		+NOBLOCKMAP;
		-DROPOFF;
		+NOTELEPORT;
		+FORCEXYBILLBOARD;
		+NOTDMATCH;
		+GHOST;
		Mass 1;
		SeeSound "weapons/largemagdrop";
	}
 
	States
	{
		Spawn:
			PEMG A 1;
			Goto Spawn1;
		Spawn1:
			#### A 2 A_SetRoll(roll+36, SPF_INTERPOLATE);
			Loop;
		Death:
			#### A 0 A_Jump(256, "Rest", "Rest2", "Rest3", "Rest4");
		Rest:
			#### B 900 A_SetRoll(0);
			#### A -1;
			stop;  		
		Rest2:
			#### A 0 {bSpriteFlip = true;}
			#### B 900 A_SetRoll(0);
			#### A -1;
			stop; 
		Rest3:
			#### C 900 A_SetRoll(0);
			#### A -1;
			Stop;
		Rest4:
			#### A 0 {bSpriteFlip = true;}
			#### C 900 A_SetRoll(0);
			#### A -1;
			Stop;
	}
}

Class EmptyDeagleMag : EmptyMagMP40
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	
	Default
	{
		Height 12;
		Radius 9;
		Speed 4;
		Scale 0.24;
		+DOOMBOUNCE;
		-NOGRAVITY;
		+WINDTHRUST;
		+CLIENTSIDEONLY;
		+MOVEWITHSECTOR;
		+MISSILE;
		+NOBLOCKMAP;
		-DROPOFF;
		+NOTELEPORT;
		+FORCEXYBILLBOARD;
		+NOTDMATCH;
		+GHOST;
		Mass 1;
		SeeSound "weapons/largemagdrop";
	}
 
	States
	{
		Spawn:
			DEMG A 0;
			Goto Spawn1;
		Spawn1:
			#### A 2 A_SetRoll(roll+36, SPF_INTERPOLATE);
			Loop;
		Death:
			#### A 0 A_Jump(256, "Rest", "Rest2", "Rest3", "Rest4");
		Rest:
			#### B 900 A_SetRoll(0);
			#### A -1;
			stop;  		
		Rest2:
			#### A 0 {bSpriteFlip = true;}
			#### B 900 A_SetRoll(0);
			#### A -1;
			stop; 
		Rest3:
			#### C 900 A_SetRoll(0);
			#### A -1;
			Stop;
		Rest4:
			#### A 0 {bSpriteFlip = true;}
			#### C 900 A_SetRoll(0);
			#### A -1;
			Stop;
	}
}

Class SMGEmptyMagazine : EmptyBrass2
{
  Default
   {
		Scale 0.2;
		BounceCount 3;
		SeeSound "weapons/smallmagdrop";
	}
 States
   {
		Spawn:
			ESMG A 0;
			Goto Spawn1;
		Spawn1:
			#### A 2 A_SetRoll(roll+36, SPF_INTERPOLATE);
			Loop;
		Death:
			#### A 0 A_Jump(256, "Rest", "Rest2", "Rest3", "Rest4");
		Rest:
			#### B 900 A_SetRoll(0);
			#### A -1;
			stop;  		
		Rest2:
			#### C 900 A_SetRoll(0);
			#### A -1;
			stop; 
		Rest3:
			#### D 900 A_SetRoll(0);
			#### A -1;
			Stop;
		Rest4:
			#### E 900 A_SetRoll(0);
			#### A -1;
			Stop;
	}
}


Class EmptyDMRMag : EmptyMagMP40
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {
   Scale 0.20;
   BounceCount 3;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      ECL1 A 1;
	  
	  Exist:
      ECL1 A 3 A_SetRoll(roll+36, SPF_INTERPOLATE); 
      loop;
   Death:
	  TNT1 A 0 A_SetRoll(0);
	  TNT1 A 0 A_Jump(256, "Rest1", "Rest2", "Rest3", "Rest4");
   Rest1:
	  ECL1 B 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest2:
	  ECL1 C 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest3:
	  ECL1 D 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	 Loop;
   Rest4:
	  ECL1 E 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
	  Loop;
	  
  Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyHDMRMag : EmptyDMRMag
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {
   Scale 0.23;
   BounceCount 3;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      HCL1 A 1;
	  
	  Exist:
      HCL1 A 3 A_SetRoll(roll+36, SPF_INTERPOLATE); 
      loop;
   Death:
	  TNT1 A 0 A_SetRoll(0);
	  TNT1 A 0 A_Jump(256, "Rest1", "Rest2", "Rest3", "Rest4");
   Rest1:
	  HCL1 B 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest2:
	  HCL1 C 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest3:
	  HCL1 D 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest4:
	  HCL1 E 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
   }
}


Class EmptyHDMRMag_SNiper : EmptyDMRMag
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {
   Scale 0.23;
   BounceCount 3;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      HCL2 A 1;
	  
	  Exist:
      HCL2 A 3 A_SetRoll(roll+36, SPF_INTERPOLATE); 
      loop;
   Death:
	  TNT1 A 0 A_SetRoll(0);
	  TNT1 A 0 A_Jump(256, "Rest1", "Rest2");
   Rest1:
	  HCL2 B 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
	Rest2:
	  HCL2 C 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
   	  Loop;
   }
}

Class EmptyCarbineMag : EmptyMagMP40
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {
   Scale 0.12;
   BounceCount 3;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
	Spawn:
		CB10 A 1;
	Exist:
		CB10 A 3 A_SetRoll(roll+20, SPF_INTERPOLATE); 
		loop;
	Death:
		CB10 A 0 A_SetRoll(0);
		TNT1 A 0 A_Jump(256, "Rest1", "Rest2", "Rest3", "Rest4");
	Rest1:
		CB10 B 900;
		TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
		Loop;
	Rest2:
		TNT1 A 0 {bSpriteFlip = true;}
		CB10 B 900;
		TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
		Loop;
	Rest3:
		CB10 C 900;
		TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
		Loop;
	Rest4:
		TNT1 A 0 {bSpriteFlip = true;}
		CB10 C 900;
		TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
		Loop;
  Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyNailgunDrum : EmptyMagMP40
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	
	Default
	{
		Scale 0.6;
		BounceCount 3;
		SeeSound "weapons/largemagdrop";
	}
	
	States
	{
		Spawn:
			NEMG A 1;
		Exist:
			NEMG A 2 A_SetRoll(roll+20, SPF_INTERPOLATE); 
			loop;
		Death:
			#### A 0 A_SetRoll(0);
			#### A 0 A_Jump(256, "Rest1", "Rest2", "Rest3", "Rest4");
		Rest1:
			#### A 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest2:
			#### A 0 {bSpriteFlip = true;}
			#### A 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest3:
			#### B 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest4:
			#### A 0 {bSpriteFlip = true;}
			#### B 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Disappear:
			TNT1 A 1;
			Stop;
	}
}

Class EmptyNailgunDrum_Javelin : EmptyMagMP40
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	
	Default
	{
		Scale 0.6;
		BounceCount 3;
		SeeSound "weapons/largemagdrop";
	}
	
	States
	{
		Spawn:
			NEMG C 1;
		Exist:
			NEMG C 2 A_SetRoll(roll+20, SPF_INTERPOLATE); 
			loop;
		Death:
			#### C 0 A_SetRoll(0);
			#### C 0 A_Jump(256, "Rest1", "Rest2", "Rest3", "Rest4");
		Rest1:
			#### C 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest2:
			#### A 0 {bSpriteFlip = true;}
			#### C 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest3:
			#### D 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Rest4:
			#### A 0 {bSpriteFlip = true;}
			#### D 900;
			#### A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			Loop;
		Disappear:
			TNT1 A 1;
			Stop;
	}
}

Class EmptyMagMP40 : Actor //this one is actually used by the MP40
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
	{
		Height 12;
		Radius 9;
		Speed 4;
		Scale 0.125;
		+DOOMBOUNCE;
		-NOGRAVITY;
		+WINDTHRUST;
		+CLIENTSIDEONLY;
		+MOVEWITHSECTOR;
		+MISSILE;
		+NOBLOCKMAP;
		-DROPOFF;
		+NOTELEPORT;
		+FORCEXYBILLBOARD;
		+NOTDMATCH;
		+GHOST;
		+ROLLSPRITE
		+ROLLCENTER
		Mass 1;
		SeeSound "weapons/smallmagdrop";
	}
	States
	{
		Spawn:
			C1P4 A 1 A_SetRoll(roll+90);
		Exist:
			C1P4 AAAAAAAAABBBBBBBBBAAAAAAAAABBBBBBBBB 1 A_SetRoll(roll+10, SPF_INTERPOLATE);
			Goto Spawn+1;
		Death:
			C1P4 # 900 A_SetRoll(0);
			TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
			loop;  
		Disappear:
			TNT1 A 1;
			Stop;
	}
}

Class EmptyRocketChamber : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {Height 12;
   Radius 9;
   Speed 4;
   Scale 1.3;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/barrelpain";}
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_StartSound("NULL");
      RCSE ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      RCSE G 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyLMGMag : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 13;
   Radius 10;
   Speed 4;
   Scale 0.25;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +ROLLSPRITE;
   +ROLLCENTER;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   BounceCount 3;
   }
   States
   {
   Spawn:
      DRM9 B 0;
	  Exist:
	  "####" B 2 A_SetRoll(roll+36);
      loop;
   Death:
	  TNT1 A 0 A_SetRoll(0);
	  TNT1 A 0 A_Jump(256, "Rest1", "Rest2");
   Rest1:
	  DRM9 B 0;
	  Goto ActuallyRest;
   Rest2:
	 DRM9 C 0;
   ActuallyRest:
     "----" "#" 900;
	 "----" "#" -1;
      Stop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyLMGMissileMag : EmptyLMGMag
{
	States
	{
		Spawn:
			LDR1 B 0;
			Goto Exist;
		Rest1:
			LDR1 B 0;
			Goto ActuallyRest;
		Rest2:
			LDR1 C 0;
			Goto ActuallyRest;
	}
}

Class EmptyASGDrum : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.57;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_StartSound("NULL");
      DRM8 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      DRM8 A 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyHMGDrum : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.65;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";}
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_StartSound("NULL");
      DRM7 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
	  TNT1 A 0 A_Jump(128, "Death2");
      DRM7 A 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Death2:
      DRM7 I 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
	  
   Disappear:
     TNT1 A 1;
     Stop;
   }
}


Class EmptyCell : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  { Height 12;
   Radius 9;
   Speed 4;
   Scale 0.38;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   +ROLLSPRITE;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
	   Spawn:
			ECEL ABCDEFG 3 {
				A_SetRoll(roll+36, SPF_INTERPOLATE);
				A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			}
			lOOP;
		Death:
			  TNT1 A 0 A_SetRoll(0);
			  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3");
			Case1:
				ECEL B 1;
				Goto Rest;
			Case2:
				ECEL D 1;
				Goto Rest;
			Case3:
				ECEL E 1;
				Goto Rest;
			Rest:
				"####" "###########################################" 2 A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				"####" "#" -1;
				Stop;
	  
   }
}

Class EmptyCellOL : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  { Height 12;
   Radius 9;
   Speed 4;
   Scale 0.38;
   +DOOMBOUNCE;
   -NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   +ROLLSPRITE;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
	   Spawn:
			ECEL ABCDEFG 3 {
				A_SetRoll(roll+36, SPF_INTERPOLATE);
				A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_StartSound("BEPBEP");
			}
			lOOP;
		Death:
			  TNT1 A 0 A_SetRoll(0);
			  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3");
			Case1:
				ECEL B 1;
				Goto Rest1;
			Case2:
				ECEL D 1;
				Goto Rest2;
			Case3:
				ECEL E 1;
				Goto Rest3;
			Rest1:
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					goto Explode;
			Rest2:
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					goto Explode;
			Rest3:
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_StartSound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					
	  Explode:
			TNT1 A 0 A_StartSound("BEPBEP");
			TNT1 A 0 A_StartSound("BEEEP");
			TNT1 A 5;
			TNT1 A 0 A_Stop;
			TNT1 A 0 A_StopSound(6);
			TNT1 A 0;
			TNT1 A 0; 
			TNT1 A 0 A_Explode(200,200, XF_HURTSOURCE);
			TNT1 A 0 A_SpawnItemEx ("HandGrenadeExplosion",0,0,30,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItem("WhiteShockwave");
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("NewGroundExplosionSmoke",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 AAAAAAA 0 A_SpawnProjectile ("ExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
			TNT1 AAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
			EXPL A 0 Radius_Quake (2, 24, 0, 15, 0);
			BEXP B 0 BRIGHT A_Scream;
			TNT1 A 0 A_ALertMonsters;
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile ("ShrapnelParticle2", 0, 0, random (0, 360), 2, random (5, 90));
			TNT1 A 0 A_StartSound("excavator/explode");
			TNT1 A 0 A_StartSound("FAREXPL", 3);
			TNT1 A 0 A_SpawnItem("BarrelExplosionSmokeColumn");
			TNT1 A 0 A_SpawnItem("FragGrenadeExplosionSmoke");
			Stop;
	  
   }
}