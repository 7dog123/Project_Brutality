class PB_Math abstract
{
	static vector3 VecFromAngles(double angle, double pitch, double mag = 1.)
	{
		double cosp = cos(pitch);
		return (cos(angle)*cosp, sin(angle)*cosp, -sin(pitch)) * mag;
	}
}

mixin class PB_BetterPickupSound
{
	override void PlayPickupSound(actor toucher)
	{
		double atten;
		int flags = CHANF_OVERLAP|CHANF_MAYBE_LOCAL;
		if(bNoAttenPickupSound) atten = ATTN_NONE;
		else atten = ATTN_NORM;
		if(toucher && toucher.CheckLocalView()) flags |= CHANF_NOPAUSE;
		toucher.A_StartSound(PickupSound,1002,flags,1.0,atten);
	}
}

mixin class PB_PowerupTimer
{
	int d;
	void PowerupTimer(color c)
	{
		d=EffectTics;
		switch(d)
		{
			case 105:case 70:case 35: owner.A_SetBlend(c,0.75,12);
			default: break;
		}
	}
	
	void EndBlend(color c)
	{ owner.A_SetBlend(c,0.85,35); }
}